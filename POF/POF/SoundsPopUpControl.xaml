<UserControl x:Class="POF.SoundsPopUpControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:core="using:Microsoft.Xaml.Interactions.Core"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
             xmlns:local="using:POF"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:shared="using:POF.Shared"
             xmlns:viewmodel="using:POF.ViewModels"
             x:Name="SoundPopUpControl"
             DataContext="{Binding SoundSelectViewModel,
                                   Source={StaticResource Locator}}"
             d:DesignHeight="300"
             d:DesignWidth="400"
             mc:Ignorable="d">


    <!--
        DataContext="{Binding SoundSelectViewModel,
        Source={StaticResource Locator}}"
    -->


    <!--<UserControl.DataContext>
        <viewmodel:SoundSelectViewModel />
    </UserControl.DataContext>-->

    <Grid x:Name="rootGrid">
        <ContentControl x:Name="MediaPlayer" Content="{Binding Player}" />
        <StackPanel>
            <TextBlock Padding="0,0,0,5"
                       Style="{StaticResource BodyTextBlockStyle}"
                       Text="Sound" />
            <Button x:Name="selectSoundControl"
                    Command="{Binding OpenPopUpCommand}"
                    Content="{Binding SelectedSoundTitle}"
                    Style="{StaticResource TransparentButtonStyle}" />
        </StackPanel>
        <Popup x:Name="SelectionPopUp"
               Canvas.ZIndex="1"
               IsLightDismissEnabled="True"
               IsOpen="{Binding IsPopUpOpen}"
               LayoutUpdated="SelectionPopUp_LayoutUpdated">
            <Popup.ChildTransitions>
                <TransitionCollection>
                    <PopupThemeTransition />
                </TransitionCollection>
            </Popup.ChildTransitions>
            <Border x:Name="PopUpBorder"
                    Width="{Binding PopUpWidth,
                                    Converter={StaticResource WidthConverter},
                                    ConverterParameter=0.9}"
                    Height="{Binding PopUpHeight,
                                     Converter={StaticResource HeightConverter},
                                     ConverterParameter=0.75}"
                    Background="{StaticResource SystemControlBackgroundChromeMediumLowBrush}"
                    BorderThickness="{ThemeResource ComboBoxDropdownBorderThickness}">

                <interactivity:Interaction.Behaviors>
                    <core:EventTriggerBehavior EventName="Unloaded">
                        <core:InvokeCommandAction Command="{Binding PopUpUnloadedCommand}" />
                    </core:EventTriggerBehavior>
                </interactivity:Interaction.Behaviors>


                <ScrollViewer x:Name="scroll" VerticalScrollBarVisibility="Auto">
                    <StackPanel Margin="10">
                        <ListView x:Name="CustomPlayList"
                                  ItemContainerStyle="{StaticResource SoundsListViewItemStyle}"
                                  ItemTemplate="{StaticResource SoundListViewDataTemplate}"
                                  ItemsSource="{Binding AlarmCustomSoundSelection}"
                                  Style="{StaticResource SoundListViewStyle}">
                            <interactivity:Interaction.Behaviors>
                                <core:EventTriggerBehavior EventName="SelectionChanged">
                                    <core:InvokeCommandAction Command="{Binding SelectedSoundCommand}"
                                                              InputConverter="{StaticResource SelectionChangedConverter}"
                                                              InputConverterParameter="{Binding ElementName=CustomPlayList}" />
                                </core:EventTriggerBehavior>
                                <!--<core:EventTriggerBehavior EventName="Unloaded">
                                    <core:InvokeCommandAction Command="{Binding ListViewUnloadedCommand}" />
                                </core:EventTriggerBehavior>-->
                            </interactivity:Interaction.Behaviors>
                            <ListView.Header>
                                <TextBlock Margin="5,5,5,10"
                                           Style="{StaticResource BodyTextBlockStyle}"
                                           Text="My Music"
                                           Visibility="{Binding AlarmCustomSoundSelection.Count,
                                                                Converter={StaticResource VisibilityConverter}}" />
                            </ListView.Header>
                        </ListView>
                        <!--  TODO: buttons margin is hardcoded in style, stackpanel margin does apply to it  -->
                        <Button x:Name="SelectMusicButton"
                                Command="{Binding PickCustomSoundCommand}"
                                Style="{StaticResource PickMusicButtonStyle}" />
                        <MenuFlyoutSeparator />
                        <ListView x:Name="StandardPlayList"
                                  ItemContainerStyle="{StaticResource SoundsListViewItemStyle}"
                                  ItemTemplate="{StaticResource SoundListViewDataTemplate}"
                                  ItemsSource="{Binding AlarmStandardSoundSelection}"
                                  Style="{StaticResource SoundListViewStyle}">
                            <interactivity:Interaction.Behaviors>
                                <core:EventTriggerBehavior EventName="SelectionChanged">
                                    <core:InvokeCommandAction Command="{Binding SelectedSoundCommand}"
                                                              InputConverter="{StaticResource SelectionChangedConverter}"
                                                              InputConverterParameter="{Binding ElementName=StandardPlayList}" />
                                </core:EventTriggerBehavior>
                            </interactivity:Interaction.Behaviors>
                        </ListView>
                    </StackPanel>
                </ScrollViewer>
            </Border>
        </Popup>
    </Grid>
</UserControl>
